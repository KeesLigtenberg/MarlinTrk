############################################################################################################
#
#    MarlinTrk
#
#    Tracking Package based on LCIO and GEAR, primarily aimed at providing track fitting in Marlin
#
#    S. Aplin, F. Gaede DESY, 2011
#
#
############################################################################################################

  ==== This is still Work in Progress =======


------------------------------------------------------------
 
Examples of how to use MarlinTrk can be found in:

https://svnsrv.desy.de/desy/marlinreco/MarlinTrkProcessors/trunk

specifically RefitProcessor which takes a track collection and refits each track.


 =============================================================================================================

  --------
 | v01-07 |
  -------- 

  	  - HelixFit
	    - Correct pass by reference in argument list

	  - MarlinTrkUtils
	    - laced definition of finaliseLCIOTrack in header making it publicly available. 
	    - Corrected track state at first and last hit.

   	  - Improved Diagnostics.

  --------
 | v01-06 | 
  -------- 
   	  - Added convenient utility methods for fitting and producing LCIO tracks.
	  - Added SET.
	  - Moved initial pivot from the origin to the point where the initial helix crossed the layer containing the first hit to be filtered. 
	  - Replaced NULL C macro with 0 for pointers value.
	  - Corrected phi range for moveRefPoint in HelixTrack.
	  - Corrected the direction of the helix fit in HelixTrack
   	  - Added diagnostic functionality. 
	     This needs to be enabled via the #define statement MARLINTRK_DIAGNOSTICS_ON in MarlinTrkDiagnostics.h. 
	     The recording of diagnostics is controlled via DiagnosticsController, with recording off by default. 
             To enable recording use getDiagnositicsPointer on the IMarlinTrkSystem and cast to DiagnosticsController, 
	     then call init(std::string root_file_name, std::string root_tree_name, bool recording_on) 
	     with recording_on set to true.

  --------
 | v01-05 |
  -------- 

	   - MarlinKalTestTrack:
	     - Protect against initializing before any hits have been added.
	     - Allow starting from strip hit in debug mode.

	   - HelixTrack:
	     - Take account of direction of helix for fit.

	   - LCIOTrackPropagators:
	     - Corrected phi range for propagation.

  --------
 | v01-04 |
  -------- 

	   - Changed fit  method to optionally respect a maxDeltaChi2 in IMarlinTrack interface:
      	      fit( double maxChi2Increment=DBL_MAX ) ;
  	   - Added new constructor to HelixTrack that generates helix from three point.
	   - Corrected sign of d0 when initialising from an LCIO track state in MarlinKalTestTrack.
	   - Fill GEAR MeasurementSurfaceStore using ILDMeasurementSurfaceStoreFiller from KalDet.
	   - Cleaned up depedencies


  --------
 | v01-03 |
  -------- 

  	   - Added cylindrical SIT for LOI data.
	   - improve use of MarlinTrk namespace.
	   - Fixed use of covariance matrix in initialise. 
	   - Changed getSiteFromLCIOHit from taking an iterator to taking a pointer to a site. 
	   - Corrected smoothed state when used.


  --------
 | v01-02 |
  -------- 

  	   - To correctly determine the fits at the first hit and the last hit methods have be added to IMarlinTrk to 
             get the list of pointers to EVENT::TrackerHit and the chi2 increment for both hits included in the fit 
             as well as those rejected as outliers. 
	   - To test the chi2 increment which would result from adding a hit to the fit the method  testChi2Increment 
             has been added to IMarlinTrk. This method will not alter the fit, it simply provides a method to test 
             the inclusion of a hit. 
           - MarlinKalTestTrack has been adapted to use the pointer to LCIO TrackerHits in ILDVTrackHit.

  --------
 | v01-01 |
  -------- 

  	   - Support for KalDet Multilayer added
	   - Added calo face to support detector
	   - Made use of new method in  ILDVMeasLayer "getIntersectionAndCellID"
	   - Change GetMLName to GetName in line with KalTest
	   - Fixed phi range of helixtrack
  	   - MarlinKalTestTrack fixed definition of phi0 in  initialise(TS& ts)
	     corrected conversion from LCIO to KalTest track parameters in initialise





  --------
 | v01-00 |
  -------- 

  IMarlinTrack:
	Interface for generic tracks in MarlinTrk. The interface should provide the functionality to perform track finding and fitting.   

  IMarlinTrkSystem:
	Base class for tracking system implementations in MarlinTrk.

  MarlinKalTestTrack:
	Tracking System used to create a KaltTest Kalman fitter - instantiates and holds the detector geometry. 

  LCIOTrackPropagators:
	Functions to perform the geometric propagation of LCIO tracks, for closed solutions.

  HelixFit:
	C++ rewrite of the aleph Fortran routine TFITHL, which provides a fast helix fit

	
